<section class="h-[661px] flex justify-center self-stretch relative hand lg:h-[982px] overflow-hidden">
    <div class="wrapper z-[2]"></div>
    <div class="absolute top-[76px]">
        <h2
            class="text-white font-primary text-[72px] not-italic font-bold leading-[normal] lg:text-[260px] lg:leading-[250px]"
        >
            EL MUNDO
        </h2>
    </div>
    <div class="w-[390px] h-[608px] shrink-0 hand-image block lg:hidden"></div>
    <div class="hidden lg:block relative mt-[6rem]">
        <div id="hand-scene" class="container-scene"></div>
    </div>
    <div class="absolute bottom-[41px] z-[2]">
        <div
            class="text-white font-primary text-[44px] not-italic font-normal leading-[normal] lg:text-[150px] lg:leading-[120px]"
        >
            EN TUS MANOS
        </div>
    </div>
</section>
<style>
    .wrapper {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background: rgb(252, 249, 240);
        background: -moz-linear-gradient(
            180deg,
            rgba(252, 249, 240, 0) 0%,
            rgba(0, 0, 0, 1) 100%
        );
        background: -webkit-linear-gradient(
            180deg,
            rgba(252, 249, 240, 0) 0%,
            rgba(0, 0, 0, 1) 100%
        );
        background: linear-gradient(
            180deg,
            rgba(252, 249, 240, 0) 0%,
            rgba(0, 0, 0, 1) 100%
        );
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#fcf9f0",endColorstr="#000000",GradientType=1);
    }

    .hand {
        background: rgb(87,57,251);
        background: linear-gradient(180deg, rgba(87,57,251,1) 0%, rgba(0,0,0,1) 66%);
    }

    .hand-image {
        background: url("https://firebasestorage.googleapis.com/v0/b/dev-system2023.appspot.com/o/360%2Fhand.png?alt=media&token=1a78095c-4488-45c5-a4eb-e5d3bbf8dce6");
        background-size: cover;
        background-repeat: no-repeat;
        z-index: 1;
    }
</style>
<script>
    import { gsap } from "gsap";
    import { ScrollTrigger } from "gsap/ScrollTrigger";
    import * as THREE from "three";
    import { FBXLoader } from "three/examples/jsm/Addons.js";
    import {getDisplay} from "../assets/js/screen";

    gsap.registerPlugin(ScrollTrigger);

    const initialDesktop = () => {
        const containerScene = document.getElementById("hand-scene");
        const scene = new THREE.Scene();
        scene.background = null;
    
        const camera = new THREE.PerspectiveCamera(
            75,
            window.innerWidth / window.innerHeight,
            0.1,
            1000
        );
        camera.position.z = 550;
    
        const purpleLight = new THREE.PointLight(0x800080); // Purple color
        purpleLight.position.set(-600, +10, -300);
        purpleLight.scale.set(1, 1, 1);
        purpleLight.intensity = 10;
        purpleLight.decay = 0.1;
        scene.add(purpleLight);
    
        const blueLight = new THREE.PointLight(0x234e8f);
        blueLight.position.set(-90, 0, 1);
        blueLight.scale.set(1, 1, 1);
        blueLight.distance = 1605;
        blueLight.intensity = 100;
        blueLight.decay = 0.1;
        scene.add(blueLight);
    
        const blueLightTop = new THREE.PointLight(0x234e8f);
        blueLightTop.position.set(0, +200, 100);
        blueLightTop.scale.set(1, 1, 1);
        blueLightTop.distance = 160;
        blueLightTop.intensity = 100;
        blueLightTop.decay = 0.1;
        scene.add(blueLightTop);
    
        const blueLightCenter = new THREE.PointLight(0x23898f);
        blueLightCenter.position.set(0, +90, 100);
        blueLightCenter.scale.set(1, 1, 1);
        blueLightCenter.distance = 160;
        blueLightCenter.intensity = 100;
        blueLightCenter.decay = 0.1;
        scene.add(blueLightCenter);
    
        // const sphereGeometry = new THREE.SphereGeometry(120, 32, 32);
        // const sphereMaterial = new THREE.MeshStandardMaterial({ color: 0x808080 });
        // const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);
        // sphere.position.set(-60, 260, -30);
        // scene.add(sphere);
    
        const renderer = new THREE.WebGLRenderer({ alpha: true });
        renderer.setSize(window.innerWidth, window.innerHeight);
        containerScene?.appendChild(renderer.domElement);
    
        let loadedObject: THREE.Group<THREE.Object3DEventMap>;
        const loader = new FBXLoader();
        loader.load(
            "https://firebasestorage.googleapis.com/v0/b/dev-system2023.appspot.com/o/360%2Fmanito.fbx?alt=media&token=ab700e94-1d5e-42bf-aa84-371cd1ddfebf",
            (fbx) => {
                fbx.rotation.z += 0.5;
                fbx.position.y -= 155;
                fbx.position.x += 120;
                fbx.scale.set(1.2, 1.2, 1.2);
                loadedObject = fbx;
    
                gsap.timeline({
                    scrollTrigger: {
                        trigger: ".container-scene",
                        scrub: 1,
                    },
                }).to(loadedObject.rotation, {
                    z: Math.PI * 0.5,
                    ease: "none",
                    duration: 3,
                });
                scene.add(fbx);
            }
        );
    
    
        // gsap.timeline({
        //     scrollTrigger: {
        //         trigger: ".container-scene",
        //         scrub: 1,
        //     },
        // }).to(sphere.position, {
        //     y: 100,
        //     ease: "none",
        //     duration: 3
        // });
    
        const animate = () => {
            requestAnimationFrame(animate);
            renderer.render(scene, camera);
        };
    
        const onWindowResize = () => {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        };
    
        animate();
        window.addEventListener("resize", onWindowResize);

    }

    const initialTablet = () => {
        gsap.fromTo(
            ".hand-image",
            {
                y: 100,
            },
            {
                scrollTrigger: {
                    trigger: ".hand-image",
                    scrub: 1,
                },
                y: -70,
                duration: 3,
                ease: "power2.out",
            }
        );
    }

    const widthDisplay = window.innerWidth;
    const display = getDisplay(widthDisplay);

    if(display == "isDesktop") {
        initialDesktop();
    } else {
        initialTablet();
    }


</script>
